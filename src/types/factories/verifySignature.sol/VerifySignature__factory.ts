/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  VerifySignature,
  VerifySignatureInterface,
} from "../../verifySignature/VerifySignature";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_messageHash",
        type: "bytes32",
      },
    ],
    name: "getEthSignedMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "getMessageHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "recoverSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "splitSignature",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610600806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a7bb580311610050578063a7bb5803146100bd578063abe5026a146100ee578063fa5408011461011157600080fd5b806397aba7f91461006c578063a35f8a401461009c575b600080fd5b61007f61007a3660046103dc565b610172565b6040516001600160a01b0390911681526020015b60405180910390f35b6100af6100aa36600461043f565b6101f1565b604051908152602001610093565b6100d06100cb36600461049e565b61022a565b60408051938452602084019290925260ff1690820152606001610093565b6101016100fc3660046104db565b6102a2565b6040519015158152602001610093565b6100af61011f366004610572565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b6000806000806101818561022a565b6040805160008152602081018083528b905260ff8316918101919091526060810184905260808101839052929550909350915060019060a0016020604051602081039080840390855afa1580156101dc573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b60008484848460405160200161020a949392919061058b565b604051602081830303815290604052805190602001209050949350505050565b600080600083516041146102845760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e6774680000000000000000604482015260640160405180910390fd5b50505060208101516040820151606090920151909260009190911a90565b6000806102b1878787876101f1565b9050600061030c826040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b9050886001600160a01b03166103228286610172565b6001600160a01b0316149998505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261036057600080fd5b813567ffffffffffffffff8082111561037b5761037b610339565b604051601f8301601f19908116603f011681019082821181831017156103a3576103a3610339565b816040528381528660208588010111156103bc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156103ef57600080fd5b82359150602083013567ffffffffffffffff81111561040d57600080fd5b6104198582860161034f565b9150509250929050565b80356001600160a01b038116811461043a57600080fd5b919050565b6000806000806080858703121561045557600080fd5b61045e85610423565b935060208501359250604085013567ffffffffffffffff81111561048157600080fd5b61048d8782880161034f565b949793965093946060013593505050565b6000602082840312156104b057600080fd5b813567ffffffffffffffff8111156104c757600080fd5b6104d38482850161034f565b949350505050565b60008060008060008060c087890312156104f457600080fd5b6104fd87610423565b955061050b60208801610423565b945060408701359350606087013567ffffffffffffffff8082111561052f57600080fd5b61053b8a838b0161034f565b94506080890135935060a089013591508082111561055857600080fd5b5061056589828a0161034f565b9150509295509295509295565b60006020828403121561058457600080fd5b5035919050565b6bffffffffffffffffffffffff198560601b1681528360148201526000835160005b818110156105ca57602081870181015160348684010152016105ad565b818111156105dc576000603483860101525b50603492019182019290925260540194935050505056fea164736f6c634300080d000a";

type VerifySignatureConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifySignatureConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifySignature__factory extends ContractFactory {
  constructor(...args: VerifySignatureConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VerifySignature> {
    return super.deploy(overrides || {}) as Promise<VerifySignature>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VerifySignature {
    return super.attach(address) as VerifySignature;
  }
  override connect(signer: Signer): VerifySignature__factory {
    return super.connect(signer) as VerifySignature__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifySignatureInterface {
    return new utils.Interface(_abi) as VerifySignatureInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifySignature {
    return new Contract(address, _abi, signerOrProvider) as VerifySignature;
  }
}
